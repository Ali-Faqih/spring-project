allprojects {
    apply plugin: 'signing'
    apply plugin: 'maven'
    group = 'org.springframework.project.gradle'
    version = '1.0.2.BUILD-SNAPSHOT'

    signing {
        sign configurations.archives
    }

    configurations {
        published.extendsFrom archives, signatures
    }

    uploadPublished {
        repositories {
            mavenDeployer {
                repository(url: uri("${buildDir}/repo")) // uncomment for testing
                beforeDeployment { MavenDeployment deployment -> signPom(deployment) }
            }
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'bundlor'

    sourceCompatibility = 1.6
    targetCompatibility = 1.6

    xLintArg = '-Xlint:all'
    [compileJava, compileTestJava]*.options*.compilerArgs = [xLintArg]

    repositories {
        mavenRepo url: 'https://internal-repo.springsource.org/libs-snapshot'
        mavenRepo url: 'https://internal-repo.springsource.org/plugins-release'
    }

    dependencies {
        compile 'log4j:log4j:1.2.16'
        testCompile 'junit:junit:4.8.2'
    }

    bundlor {
        enabled = true
        failOnWarnings = true
        bundleManifestVersion = 2
        bundleVendor = 'SpringSource'
        bundleName = project.description
        bundleVersion = project.version
        importTemplate = [
            'org.apache.log4j.*;version="[1.2.16, 2.0.0)"'
        ]
    }

    task sourcesJar(type: Jar, dependsOn:classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn:javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

}

project(':spring-project-core') {
    description = "Spring Project (Gradle) Core"
    bundlor {
        bundleSymbolicName = 'org.springframework.project.core'
    }
}

project(':spring-project-aj') {
    description = "Spring Project (Gradle) AspectJ"
    bundlor {
        bundleSymbolicName = 'org.springframework.project.aj'
        importTemplate += [
            "org.springframework.project.core.*;version=\"${project.version}\""
        ]
    }
    dependencies {
        compile project(':spring-project-core')
    }
}

//
// root project configuration
//
task wrapper(type: Wrapper) {
    distributionUrl='http://repo.gradle.org/gradle/distributions-snapshots/gradle-1.0-milestone-5-20111016033240+0200-bin.zip'
}

task aggregatedJavadoc(type: Javadoc) {
    source subprojects.collect { project ->
        project.sourceSets.main.allJava
    }
    destinationDir = new File(buildDir, "docs/${project.version}/javadoc-api")
    classpath = files(subprojects.collect { project ->
        project.sourceSets.main.compileClasspath
    })
}

task docsZip(type: Zip, dependsOn:aggregatedJavadoc) {
    classifier = 'docs'
    from(buildDir) { include 'docs/**/*' }
}

artifacts {
    //archives distZip
    archives docsZip
}

